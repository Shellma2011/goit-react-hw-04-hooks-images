{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Loader/Loader.js","components/Button/Button.js","service/imagesAPI.js","App.js","index.js"],"names":["SearchbarSection","styled","div","SearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","Searchbar","onSubmit","useState","query","setQuery","e","preventDefault","toast","error","type","name","autocomplete","placeholder","onChange","currentTarget","value","ImageGalleryItems","li","ImageGalleryItemsImage","img","ImageGalleryItem","id","tags","webformatURL","onOpenModal","largeImageURL","src","alt","onClick","ImageGalleryList","ul","ImageGallery","images","map","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","props","useEffect","window","addEventListener","onCloseModal","removeEventListener","code","createPortal","target","children","Loader","height","width","color","arialLabel","LoadMoreBtn","Button","onLoadMoreButton","axios","defaults","baseURL","URI","getImages","serchTerm","page","a","get","response","data","AppWrapper","ErrorMessage","p","App","setImages","setPage","setSerchTerm","showModal","setShowModal","setLargeImageURL","status","setStatus","setData","setChangeSerchTerm","onToggleModal","handleScroll","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","then","total","totalHits","hits","prevState","console","log","onLargeImgClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b128f97.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport styled from 'styled-components';\nimport { FaSearch } from 'react-icons/fa';\n\nconst SearchbarSection = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query === '') {\n      toast.error('Enter what you want to find');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <SearchbarSection>\n      <Toaster />\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <FaSearch />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n        <SearchFormInput\n          type=\"text\"\n          name=\"query\"\n          autocomplete=\"off\"\n          placeholder=\"Search images and photos\"\n          onChange={handleQueryChange}\n          value={query}\n        />\n      </SearchForm>\n    </SearchbarSection>\n  );\n}\n\nSearchbar.propTypes = { onSubmit: PropTypes.func };\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ImageGalleryItems = styled.li`\n  height: 260px;\n  width: 100%;\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nconst ImageGalleryItemsImage = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  border-radius: 6px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nconst ImageGalleryItem = ({ id, tags, webformatURL, onOpenModal, largeImageURL }) => (\n  <ImageGalleryItems key={id}>\n    <ImageGalleryItemsImage\n      src={webformatURL}\n      alt={tags}\n      onClick={() => onOpenModal(largeImageURL)}\n    />\n  </ImageGalleryItems>\n);\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  tags: PropTypes.string,\n  webformatURL: PropTypes.string.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/';\nimport styled from 'styled-components';\n\nconst ImageGalleryList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst ImageGallery = ({ images, onOpenModal }) => (\n  <ImageGalleryList>\n    {images.map(({ id, tags, webformatURL, largeImageURL }) => (\n      <ImageGalleryItem\n        key={id}\n        id={id}\n        tags={tags}\n        webformatURL={webformatURL}\n        largeImageURL={largeImageURL}\n        onOpenModal={onOpenModal}\n      />\n    ))}\n  </ImageGalleryList>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      tags: PropTypes.string,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\nconst ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal(props) {\n  useEffect(() => {\n    window.addEventListener('keydown', onCloseModal);\n\n    return () => {\n      window.removeEventListener('keydown', onCloseModal);\n    };\n  });\n\n  const onCloseModal = e => {\n    if (e.code === 'Escape') {\n      props.onCloseModal();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      props.onCloseModal();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>{props.children}</ModalWindow>\n    </Overlay>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import { TailSpin } from 'react-loader-spinner';\n\nconst Loader = () => (\n  <>\n    <TailSpin height={80} width={80} color=\"#696969\" arialLabel=\"loading\" />\n  </>\n);\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst LoadMoreBtn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ name, onLoadMoreButton }) => (\n  <LoadMoreBtn type=\"button\" onClick={() => onLoadMoreButton()}>\n    {name}\n  </LoadMoreBtn>\n);\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  onLoadMoreButton: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst KEY = '24296481-49f21b132d362d0e842f769a1';\nconst URI = `/?key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\nexport const getImages = async (serchTerm, page) => {\n  const response = await axios.get(`${URI}&q=${serchTerm}&page=${page}`);\n  return response.data;\n};\n\nexport default getImages;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport Loader from './components/Loader';\nimport Button from './components/Button';\nimport getImages from './service/imagesAPI';\n\nconst AppWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n\nconst ErrorMessage = styled.p`\n  text-align: center;\n  margin-top: 50px;\n\n  font-size: 19px;\n  font-weight: bold;\n  margin: 40px 0 20px;\n`;\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [serchTerm, setSerchTerm] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [data, setData] = useState(null);\n\n  const setChangeSerchTerm = serchTerm => {\n    setSerchTerm(serchTerm);\n  };\n\n  const onLargeImgClick = largeImageURL => {\n    setLargeImageURL(largeImageURL);\n  };\n\n  const onToggleModal = img => {\n    setShowModal(!showModal);\n    setLargeImageURL(img);\n  };\n\n  const onLoadMoreButton = () => {\n    getImages(serchTerm, page).then(data => {\n      setImages(prevState => [...prevState, ...data.hits]);\n      setPage(prevState => prevState + 1);\n    });\n    handleScroll();\n  };\n\n  const handleScroll = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (serchTerm === '') {\n      return;\n    }\n\n    setStatus('pending');\n\n    const fetchImages = () => {\n      setPage(1);\n      getImages(serchTerm, 1).then(data => {\n        if (data.total === 0) {\n          setStatus('rejected');\n          return;\n        }\n        setData(data.totalHits);\n        setImages(data.hits);\n        setPage(prevState => prevState + 1);\n        setStatus('resolved');\n        // console.log(data.total);\n        // console.log(data.totalHits);\n      });\n    };\n    fetchImages();\n  }, [serchTerm]);\n\n  if (status === 'idle') {\n    return <Searchbar onSubmit={setChangeSerchTerm} />;\n  }\n\n  if (status === 'pending') {\n    return <Loader />;\n  }\n\n  if (status === 'rejected') {\n    return (\n      <>\n        <Searchbar onSubmit={setChangeSerchTerm} />\n        <ErrorMessage>Whoops, something went wrong! Please enter a valid request</ErrorMessage>\n      </>\n    );\n  }\n\n  if (status === 'resolved') {\n    console.log(data);\n    return (\n      <AppWrapper>\n        <Searchbar onSubmit={setChangeSerchTerm} />\n        {showModal && (\n          <Modal onCloseModal={onToggleModal}>\n            <img src={largeImageURL} alt=\"\" />\n          </Modal>\n        )}\n        <ImageGallery\n          images={images}\n          onOpenModal={onToggleModal}\n          onLargeImgClick={onLargeImgClick}\n        />\n        {data > 12 && <Button name={'Load more'} onLoadMoreButton={onLoadMoreButton} />}\n      </AppWrapper>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}